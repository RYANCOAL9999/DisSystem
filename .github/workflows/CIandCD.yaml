# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      rabbitmq:
        image: rabbitmq:3-management
        ports:
          - 5672:5672
          - 15672:15672

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.20

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Install Dependencies for Server
      working-directory: ./server
      run: go mod tidy

    - name: Build Server
      working-directory: ./server
      run: |
        go build -o server

    - name: Test Server
      working-directory: ./server
      run: |
        go test -v ./...

    - name: Install Dependencies for Publisher
      working-directory: ./publisher
      run: go mod tidy

    - name: Build Publisher
      working-directory: ./publisher
      run: |
        go build -o publisher

    - name: Test Publisher
      working-directory: ./publisher
      run: |
        go test -v ./...

    - name: Lint Go code
      run: |
        go install golang.org/x/lint/golint@latest
        golint ./...

    # - name: Build Docker images
    #   run: |
    #     docker build -t app/publisher ./publisher
    #     docker build -t app/server ./server

    # - name: Push Docker images
    #   env:
    #     DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
    #     DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
    #   run: |
    #     echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
    #     docker push app/publisher
    #     docker push app/server
